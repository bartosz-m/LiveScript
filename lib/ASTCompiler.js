// Generated by LiveScript 1.5.0
var lexer, parser, ast, _parser, ref$;
lexer = require('./lexer');
parser = require('./parser').parser;
ast = require('./ast');
_parser = (ref$ = clone$(parser), ref$.yy = ast, ref$.lexer = {
  lex: function(){
    var ref$, tag, first_line, first_column, last_line, last_column;
    ref$ = this.tokens[++this.pos] || [''], tag = ref$[0], this.yytext = ref$[1], first_line = ref$[2], first_column = ref$[3];
    ref$ = this.tokens[this.pos + 1] || [''], last_line = ref$[2], last_column = ref$[3];
    this.yylineno = first_line;
    this.yylloc = {
      first_line: first_line,
      first_column: first_column,
      last_line: last_line,
      last_column: last_column
    };
    return tag;
  },
  setInput: function(it){
    this.pos = -1;
    return this.tokens = it;
  },
  upcomingInput: function(){
    return '';
  }
}, ref$);
exports.VERSION = '1.5.0';
exports.compile = function(it){
  return _parser.parse(typeof it === 'string' ? lexer.lex(it) : it);
};
function clone$(it){
  function fun(){} fun.prototype = it;
  return new fun;
}